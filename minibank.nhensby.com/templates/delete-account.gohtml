<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Delete Account</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: sans-serif;
        }
    </style>
</head>
<body>

    <!-- Navigation Bar -->
    <div class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a href="/" class="navbar-brand">My Account</a>
        <span class="navbar-text px-4"> | </span> 

        {{if .IsLoggedIn}}
            <a href="/payment" class="navbar-brand">Pay</a>
            <span class="navbar-text px-4"> | </span> 
            <a href="/transactions" class="navbar-brand">Transactions</a>
            <span class="navbar-text px-4"> | </span>
            <a href="/all-accounts" class="navbar-brand">All Accounts</a>
            <span class="navbar-text px-4"> | </span> 
            <a href="/delete-account" class="navbar-brand">Delete Account</a>
            <span class="navbar-text px-4"> | </span> 
        {{end}}

        <div id="auth-links" class="ml-auto">
            {{if .IsLoggedIn}}
                <a href="/logout" class="navbar-brand">Logout</a>
            {{else}}
                <a href="/login" class="navbar-brand">Admin</a>
            {{end}}
        </div>
        <!-- Link to Main Site -->
        <div class="ml-3">
            <a href="https://nhensby.com" class="navbar-brand text-warning">Back to nhensby.com</a>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container mt-4">
        <h1>Accounts</h1>

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Phone Number</th>
                    <th>Balance</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                {{range .Accounts}}
                <tr>
                    <td>{{.Id}}</td>
                    <td>{{.First_name}}</td>
                    <td>{{.Last_name}}</td>
                    <td>{{.Email}}</td>
                    <td>{{if .Phone_number}}(+61) {{.Phone_number}}{{else}}N/A{{end}}</td>
                    <td>${{printf "%.2f" .Balance}}</td>
                    <td>
                        <form class="delete-account-form" method="POST" action="/delete-account" style="display: inline;">
                            <input type="hidden" name="account_id" value="{{.Id}}">
                            <button type="button" class="btn btn-danger btn-delete" data-account-id="{{.Id}}">
                                Delete
                            </button>
                        </form>
                    </td>
                </tr>
                {{end}}
            </tbody>
        </table>
    </div>

<script>
    document.querySelectorAll('.btn-delete').forEach(button => {
        button.addEventListener('click', function (event) {
            const accountId = this.getAttribute('data-account-id');  // Get account ID

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you really want to delete this account?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Make a fetch request to delete the account
                    fetch('/delete-account', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: `account_id=${accountId}`
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            // Handle error cases with SweetAlert
                            if (data.error === "unauthorized") {
                                Swal.fire('Error', 'You are not authorized to delete this account.', 'error');
                            } else if (data.error === "invalid_account_id") {
                                Swal.fire('Error', 'Invalid account ID.', 'error');
                            } else if (data.error === "fetch_error") {
                                Swal.fire('Error', 'Error fetching account details.', 'error');
                            } else if (data.error === "delete_error") {
                                Swal.fire('Error', 'Error deleting the account.', 'error');
                            } else if (data.error === "not_logged_in") {
                                Swal.fire('Error', 'You are not logged in.', 'error');
                                window.location.href = "/login"; // Redirect to login page
                            }
                        } else if (data.status === "success") {
                            // Success case for non-self-deletion
                            Swal.fire('Deleted!', 'The account has been deleted.', 'success')
                                .then(() => {
                                    window.location.reload();
                                });
                        } else if (data.status === "logged_out") {
                            // Logout case after self-deletion
                            Swal.fire('Account Deleted', 'Your account has been deleted, and you have been logged out.', 'success')
                                .then(() => {
                                    window.location.href = "/login"; // Redirect to login page
                                });
                        }
                    })
                    .catch(error => {
                        console.error('Error deleting account:', error);
                        Swal.fire('Error', 'An unexpected error occurred.', 'error');
                    });
                }
            });
        });
    });
</script>



</body>
</html>
